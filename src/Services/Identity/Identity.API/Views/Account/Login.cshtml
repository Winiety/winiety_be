@model Identity.API.ViewModels.LoginViewModel
@using Microsoft.Extensions.Options
@inject IOptions<Identity.API.Options.ReCaptchaOptions> ReCaptchaOptions

@{
    ViewData["Title"] = "Log in";
}
<div class="container account-login-container">
    <div class="row">
        <div class="col-md-12">
            <section>
                <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <input type="hidden" asp-for="ReturnUrl" />
                    <input type="hidden" asp-for="ReCaptchaToken" />
                    <h4>ARE YOU REGISTERED?</h4>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label form-label"></label>
                        <input asp-for="Email" class="form-control form-input form-input-center" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password" class="control-label form-label"></label>
                        <input asp-for="Password" class="form-control form-input form-input-center" type="password" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label asp-for="RememberMe">
                                <input asp-for="RememberMe" />
                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>
                    </div>
                    <div class="text-danger">@Html.ValidationSummary(true)</div>
                    <div class="form-group">
                        <button data-action="submit"
                                data-sitekey="@ReCaptchaOptions.Value.ReCaptchaSiteKey"
                                data-callback="onSubmit"
                                class="btn btn-default btn-brand btn-brand-big g-recaptcha">
                            LOG IN
                        </button>
                    </div>
                    <p>
                        <a asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" class="text">Register as a new user?</a>
                    </p>
                </form>
            </section>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="https://www.google.com/recaptcha/api.js"></script>
    <script>
        function onSubmit(token) {
            $("#ReCaptchaToken").val(token);
            $("form").submit();
        }
    </script>
}